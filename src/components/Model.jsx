/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 model.glb
*/

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'

import React, { useRef, useEffect } from 'react'; /* highlight-line */
import { useGLTF, useAnimations } from '@react-three/drei'; /* highlight-line */
import * as THREE from 'three';


let scene = new THREE.Scene();
let mesh


export function Model(props) {
  const { nodes, materials } = useGLTF('/model.glb')

  console.log(nodes)

  // const color = new THREE.Color('#3e18c1')
  //
  // materials.Wolf3D_Skin.emissive = new THREE.Color(color)
  // materials.Wolf3D_Eye.emissive = new THREE.Color(color)

  // materials.Wolf3D_Skin= new THREE.MeshDepthMaterial({color:'#a3ffff'});

    // const group = useRef();
    // const { nodes, materials, animations } = useGLTF('/model-animated.glb');
    //
    // const { actions } = useAnimations(animations, group);
    //
    // useEffect(() => {/* highlight-line */
    //     actions['Armature|mixamo.com|Layer0'].play(); /* highlight-line */
    // });

    return (
    // <group {...props} dispose={null}>
    <group {...props} dispose={null} >
      <primitive object={nodes.Hips} />
      {/*<skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />*/}
      {/*<skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />*/}
      {/*<skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />*/}
      {/*<skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />*/}
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry}  skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      {/*<skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />*/}
    </group>
  )
}

useGLTF.preload('/model.glb', function (gltf) {
  // mesh = gltf.scene.getObjectByName( 'model' );
  // mesh.rotation.z = Math.PI / 2;
  // scene.add( mesh );
});
